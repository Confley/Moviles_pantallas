{"ast":null,"code":"import React from \"react\";\nimport { NativeBaseProvider, Box, VStack, HStack, Text, Divider, Pressable } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NotificationsScreen = function NotificationsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var notifications = [{\n    id: 1,\n    carrera: \"Carrera ITIC\",\n    usuario: \"Claudia Morán\",\n    accion: \"publicó un nuevo aviso\"\n  }, {\n    id: 2,\n    carrera: \"Taller de investigación\",\n    usuario: \"Caritina\",\n    accion: \"comentó en un aviso\"\n  }, {\n    id: 3,\n    carrera: \"Servicio social\",\n    usuario: \"Claudia Morán\",\n    accion: \"respondió a un aviso\"\n  }];\n  var handleNotificationPress = function handleNotificationPress(id) {\n    console.log(\"Notification \" + id + \" pressed\");\n  };\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(Box, {\n      bg: \"blue.600\",\n      p: 4,\n      children: _jsx(HStack, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: _jsx(Text, {\n          color: \"white\",\n          fontWeight: \"bold\",\n          fontSize: \"lg\",\n          children: \"Notificaciones\"\n        })\n      })\n    }), _jsx(Box, {\n      flex: 1,\n      p: 4,\n      children: notifications.map(function (notification) {\n        return _jsx(Pressable, {\n          onPress: function onPress() {\n            return handleNotificationPress(notification.id);\n          },\n          children: function children(_ref2) {\n            var isPressed = _ref2.isPressed;\n            return _jsxs(VStack, {\n              space: 2,\n              alignItems: \"flex-start\",\n              backgroundColor: isPressed ? \"gray.100\" : \"transparent\",\n              p: 2,\n              children: [_jsx(Text, {\n                fontWeight: \"bold\",\n                fontSize: \"lg\",\n                mb: 1,\n                children: notification.carrera\n              }), _jsxs(HStack, {\n                alignItems: \"center\",\n                children: [_jsx(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  children: notification.usuario\n                }), _jsx(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  mx: 1,\n                  children: \"\\xB7\"\n                }), _jsx(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  children: notification.accion\n                })]\n              }), _jsx(Divider, {\n                my: 2\n              })]\n            });\n          }\n        }, notification.id);\n      })\n    })]\n  });\n};\nexport default NotificationsScreen;","map":{"version":3,"names":["React","NativeBaseProvider","Box","VStack","HStack","Text","Divider","Pressable","jsx","_jsx","jsxs","_jsxs","NotificationsScreen","_ref","navigation","notifications","id","carrera","usuario","accion","handleNotificationPress","console","log","children","bg","p","justifyContent","alignItems","color","fontWeight","fontSize","flex","map","notification","onPress","_ref2","isPressed","space","backgroundColor","mb","mx","my"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/Notificación.js"],"sourcesContent":["//Notificaciones.\r\n\r\nimport React from \"react\";\r\nimport {\r\n  NativeBaseProvider,\r\n  Box,\r\n  VStack,\r\n  HStack,\r\n  Text,\r\n  Divider,\r\n  Pressable,\r\n} from \"native-base\";\r\n\r\nconst NotificationsScreen = ({ navigation }) => {\r\n  const notifications = [\r\n    {\r\n      id: 1,\r\n      carrera: \"Carrera ITIC\",\r\n      usuario: \"Claudia Morán\",\r\n      accion: \"publicó un nuevo aviso\",\r\n    },\r\n    {\r\n      id: 2,\r\n      carrera: \"Taller de investigación\",\r\n      usuario: \"Caritina\",\r\n      accion: \"comentó en un aviso\",\r\n    },\r\n    {\r\n      id: 3,\r\n      carrera: \"Servicio social\",\r\n      usuario: \"Claudia Morán\",\r\n      accion: \"respondió a un aviso\",\r\n    },\r\n  ];\r\n\r\n  const handleNotificationPress = (id) => {\r\n    \r\n    console.log(`Notification ${id} pressed`);\r\n  };\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <Box bg=\"blue.600\" p={4}>\r\n        <HStack justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"lg\">\r\n            Notificaciones\r\n          </Text>\r\n        </HStack>\r\n      </Box>\r\n      <Box flex={1} p={4}>\r\n        {notifications.map((notification) => (\r\n          <Pressable\r\n            key={notification.id}\r\n            onPress={() => handleNotificationPress(notification.id)}\r\n          >\r\n            {({ isPressed }) => (\r\n              <VStack\r\n                space={2}\r\n                alignItems=\"flex-start\"\r\n                backgroundColor={isPressed ? \"gray.100\" : \"transparent\"}\r\n                p={2}\r\n              >\r\n                <Text fontWeight=\"bold\" fontSize=\"lg\" mb={1}>\r\n                  {notification.carrera}\r\n                </Text>\r\n                <HStack alignItems=\"center\">\r\n                  <Text fontSize=\"sm\" color=\"gray.500\">\r\n                    {notification.usuario}\r\n                  </Text>\r\n                  <Text fontSize=\"sm\" color=\"gray.500\" mx={1}>\r\n                    ·\r\n                  </Text>\r\n                  <Text fontSize=\"sm\" color=\"gray.500\">\r\n                    {notification.accion}\r\n                  </Text>\r\n                </HStack>\r\n                <Divider my={2} />\r\n              </VStack>\r\n            )}\r\n          </Pressable>\r\n        ))}\r\n      </Box>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nexport default NotificationsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}