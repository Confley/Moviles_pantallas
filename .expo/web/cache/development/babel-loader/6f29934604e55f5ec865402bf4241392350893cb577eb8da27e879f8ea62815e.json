{"ast":null,"code":"import React from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NativeBaseProvider, Center, Box, FormControl, Stack, Text, Button, HStack, Input, Select } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar languageOptions = [\"Español\", \"Inglés\"];\nvar LanguageSettingsScreen = function LanguageSettingsScreen() {\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(Center, {\n      flex: 1,\n      children: [_jsx(Box, {\n        maxWidth: \"90%\",\n        mx: \"auto\",\n        children: _jsx(FormControl, {\n          children: _jsxs(Stack, {\n            space: 4,\n            alignItems: \"center\",\n            children: [_jsx(Text, {\n              fontSize: \"xl\",\n              children: \"Idioma:\"\n            }), _jsx(Select, {\n              minWidth: 200,\n              fontSize: \"md\",\n              placeholder: \"Seleccione un idioma\",\n              children: languageOptions.map(function (option) {\n                return _jsx(Select.Item, {\n                  label: option,\n                  value: option\n                });\n              })\n            }), _jsx(Center, {\n              children: _jsx(Button, {\n                colorScheme: \"blue\",\n                mt: 4,\n                children: \"Aplicar\"\n              })\n            })]\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Regresar\"\n        })\n      })]\n    })\n  });\n};\nexport default LanguageSettingsScreen;","map":{"version":3,"names":["React","Image","NativeBaseProvider","Center","Box","FormControl","Stack","Text","Button","HStack","Input","Select","jsx","_jsx","jsxs","_jsxs","languageOptions","LanguageSettingsScreen","children","flex","maxWidth","mx","space","alignItems","fontSize","minWidth","placeholder","map","option","Item","label","value","colorScheme","mt","TouchableOpacity","style","styles","button","onPress","navigation","goBack","buttonText"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/idioma.js"],"sourcesContent":["//Configuración de idioma\r\nimport React from \"react\";\r\nimport { Image } from \"react-native\";\r\nimport {\r\n  NativeBaseProvider,\r\n  Center,\r\n  Box,\r\n  FormControl,\r\n  Stack,\r\n  Text,\r\n  Button,\r\n  HStack,\r\n  Input,\r\n  Select\r\n} from \"native-base\";\r\n\r\n\r\n\r\nconst languageOptions = [\"Español\", \"Inglés\"];\r\n\r\nconst LanguageSettingsScreen = () => {\r\n  return (\r\n    <NativeBaseProvider >\r\n      <Center flex={1}>\r\n        <Box maxWidth=\"90%\" mx=\"auto\">\r\n          <FormControl>\r\n            <Stack space={4} alignItems=\"center\" >\r\n              <Text fontSize=\"xl\">Idioma:</Text>\r\n              <Select\r\n                minWidth={200}\r\n                fontSize=\"md\"\r\n                placeholder=\"Seleccione un idioma\"\r\n              >\r\n                {languageOptions.map((option) => (\r\n                  <Select.Item label={option} value={option} />\r\n                ))}\r\n              </Select>\r\n\r\n              <Center>\r\n                <Button colorScheme=\"blue\" mt={4}>\r\n                  Aplicar\r\n                </Button>\r\n              </Center>\r\n            </Stack>\r\n          </FormControl>\r\n        </Box>\r\n        <TouchableOpacity style={styles.button} \r\n      onPress={() => navigation.goBack()}>\r\n        <Text style={styles.buttonText}>Regresar</Text>\r\n      </TouchableOpacity>\r\n      </Center>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nexport default LanguageSettingsScreen;"],"mappings":"AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,KAAA;AAE1B,SACEC,kBAAkB,EAClBC,MAAM,EACNC,GAAG,EACHC,WAAW,EACXC,KAAK,EACLC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,MAAM,QACD,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAIrB,IAAMC,eAAe,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC;AAE7C,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;EACnC,OACEJ,IAAA,CAACX,kBAAkB;IAAAgB,QAAA,EACjBH,KAAA,CAACZ,MAAM;MAACgB,IAAI,EAAE,CAAE;MAAAD,QAAA,GACdL,IAAA,CAACT,GAAG;QAACgB,QAAQ,EAAC,KAAK;QAACC,EAAE,EAAC,MAAM;QAAAH,QAAA,EAC3BL,IAAA,CAACR,WAAW;UAAAa,QAAA,EACVH,KAAA,CAACT,KAAK;YAACgB,KAAK,EAAE,CAAE;YAACC,UAAU,EAAC,QAAQ;YAAAL,QAAA,GAClCL,IAAA,CAACN,IAAI;cAACiB,QAAQ,EAAC,IAAI;cAAAN,QAAA,EAAC;YAAO,EAAO,EAClCL,IAAA,CAACF,MAAM;cACLc,QAAQ,EAAE,GAAI;cACdD,QAAQ,EAAC,IAAI;cACbE,WAAW,EAAC,sBAAsB;cAAAR,QAAA,EAEjCF,eAAe,CAACW,GAAG,CAAC,UAACC,MAAM;gBAAA,OAC1Bf,IAAA,CAACF,MAAM,CAACkB,IAAI;kBAACC,KAAK,EAAEF,MAAO;kBAACG,KAAK,EAAEH;gBAAO,EAAG;cAAA,CAC9C;YAAC,EACK,EAETf,IAAA,CAACV,MAAM;cAAAe,QAAA,EACLL,IAAA,CAACL,MAAM;gBAACwB,WAAW,EAAC,MAAM;gBAACC,EAAE,EAAE,CAAE;gBAAAf,QAAA,EAAC;cAElC;YAAS,EACF;UAAA;QACH;MACI,EACV,EACNL,IAAA,CAACqB,gBAAgB;QAACC,KAAK,EAAEC,MAAM,CAACC,MAAO;QACzCC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMC,UAAU,CAACC,MAAM,EAAE;QAAA,CAAC;QAAAtB,QAAA,EACjCL,IAAA,CAACN,IAAI;UAAC4B,KAAK,EAAEC,MAAM,CAACK,UAAW;UAAAvB,QAAA,EAAC;QAAQ;MAAO,EAC9B;IAAA;EACV,EACU;AAEzB,CAAC;AAED,eAAeD,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}