{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useStateStyleSheet, TouchableOpacity } from \"react\";\nimport { NativeBaseProvider, Center, Box, FormControl, Stack, Text, Button, HStack, Radio, VStack } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThemeSettingsScreen = function ThemeSettingsScreen() {\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedValue = _useState2[0],\n    setSelectedValue = _useState2[1];\n  var handleChange = function handleChange(value) {\n    setSelectedValue(value);\n  };\n  return _jsxs(NativeBaseProvider, {\n    children: [_jsx(Box, {\n      bg: \"blue.600\",\n      p: 4,\n      children: _jsx(HStack, {\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        children: _jsx(Text, {\n          color: \"white\",\n          fontWeight: \"bold\",\n          fontSize: \"lg\",\n          children: \"Configuraci\\xF3n de Tema\"\n        })\n      })\n    }), _jsx(Center, {\n      flex: 1,\n      children: _jsx(Box, {\n        maxWidth: \"90%\",\n        mx: \"auto\",\n        children: _jsx(FormControl, {\n          children: _jsxs(Stack, {\n            space: 4,\n            alignItems: \"center\",\n            children: [_jsx(Text, {\n              fontSize: \"xl\",\n              children: \"Tema:\"\n            }), _jsx(VStack, {\n              space: 4,\n              alignItems: \"flex-start\",\n              children: _jsx(Radio.Group, {\n                name: \"theme\",\n                value: selectedValue,\n                onChange: handleChange,\n                children: _jsxs(VStack, {\n                  space: 3,\n                  children: [_jsx(Radio, {\n                    value: \"light\",\n                    children: \"Claro\"\n                  }), _jsx(Radio, {\n                    value: \"dark\",\n                    children: \"Oscuro\"\n                  })]\n                })\n              })\n            })]\n          })\n        })\n      })\n    })]\n  });\n};\nexport default ThemeSettingsScreen;","map":{"version":3,"names":["React","useStateStyleSheet","TouchableOpacity","NativeBaseProvider","Center","Box","FormControl","Stack","Text","Button","HStack","Radio","VStack","jsx","_jsx","jsxs","_jsxs","ThemeSettingsScreen","_useState","useState","_useState2","_slicedToArray","selectedValue","setSelectedValue","handleChange","value","children","bg","p","justifyContent","alignItems","color","fontWeight","fontSize","flex","maxWidth","mx","space","Group","name","onChange"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/Tema.js"],"sourcesContent":["//Cambiar tema\r\nimport React, { useStateStyleSheet, TouchableOpacity  } from \"react\";\r\n\r\nimport {\r\n  NativeBaseProvider,\r\n  Center,\r\n  Box,\r\n  FormControl,\r\n  Stack,\r\n  Text,\r\n  Button,\r\n  HStack,\r\n  Radio,\r\n  VStack,\r\n} from \"native-base\";\r\n\r\nconst ThemeSettingsScreen = () => {\r\n  const [selectedValue, setSelectedValue] = useState(\"light\");\r\n\r\n  const handleChange = (value) => {\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <Box bg=\"blue.600\" p={4}>\r\n        <HStack justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text color=\"white\" fontWeight=\"bold\" fontSize=\"lg\">\r\n            Configuraci√≥n de Tema\r\n          </Text>\r\n        </HStack>\r\n      </Box>\r\n      <Center flex={1}>\r\n        <Box maxWidth=\"90%\" mx=\"auto\">\r\n          <FormControl>\r\n            <Stack space={4} alignItems=\"center\">\r\n              <Text fontSize=\"xl\">Tema:</Text>\r\n              <VStack space={4} alignItems=\"flex-start\">\r\n                <Radio.Group\r\n                  name=\"theme\"\r\n                  value={selectedValue}\r\n                  onChange={handleChange}\r\n                >\r\n                  <VStack space={3}>\r\n                    <Radio value=\"light\">Claro</Radio>\r\n                    <Radio value=\"dark\">Oscuro</Radio>\r\n                  </VStack>\r\n                </Radio.Group>\r\n              </VStack>\r\n              \r\n            </Stack>\r\n          </FormControl>\r\n        </Box>\r\n      </Center>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nexport default ThemeSettingsScreen;"],"mappings":";AACA,OAAOA,KAAK,IAAIC,kBAAkB,EAAEC,gBAAgB,QAAS,OAAO;AAEpE,SACEC,kBAAkB,EAClBC,MAAM,EACNC,GAAG,EACHC,WAAW,EACXC,KAAK,EACLC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,MAAM,QACD,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErB,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAA,EAAS;EAChC,IAAAC,SAAA,GAA0CC,QAAQ,CAAC,OAAO,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAApDI,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC9BF,gBAAgB,CAACE,KAAK,CAAC;EACzB,CAAC;EAED,OACET,KAAA,CAACb,kBAAkB;IAAAuB,QAAA,GACjBZ,IAAA,CAACT,GAAG;MAACsB,EAAE,EAAC,UAAU;MAACC,CAAC,EAAE,CAAE;MAAAF,QAAA,EACtBZ,IAAA,CAACJ,MAAM;QAACmB,cAAc,EAAC,eAAe;QAACC,UAAU,EAAC,QAAQ;QAAAJ,QAAA,EACxDZ,IAAA,CAACN,IAAI;UAACuB,KAAK,EAAC,OAAO;UAACC,UAAU,EAAC,MAAM;UAACC,QAAQ,EAAC,IAAI;UAAAP,QAAA,EAAC;QAEpD;MAAO;IACA,EACL,EACNZ,IAAA,CAACV,MAAM;MAAC8B,IAAI,EAAE,CAAE;MAAAR,QAAA,EACdZ,IAAA,CAACT,GAAG;QAAC8B,QAAQ,EAAC,KAAK;QAACC,EAAE,EAAC,MAAM;QAAAV,QAAA,EAC3BZ,IAAA,CAACR,WAAW;UAAAoB,QAAA,EACVV,KAAA,CAACT,KAAK;YAAC8B,KAAK,EAAE,CAAE;YAACP,UAAU,EAAC,QAAQ;YAAAJ,QAAA,GAClCZ,IAAA,CAACN,IAAI;cAACyB,QAAQ,EAAC,IAAI;cAAAP,QAAA,EAAC;YAAK,EAAO,EAChCZ,IAAA,CAACF,MAAM;cAACyB,KAAK,EAAE,CAAE;cAACP,UAAU,EAAC,YAAY;cAAAJ,QAAA,EACvCZ,IAAA,CAACH,KAAK,CAAC2B,KAAK;gBACVC,IAAI,EAAC,OAAO;gBACZd,KAAK,EAAEH,aAAc;gBACrBkB,QAAQ,EAAEhB,YAAa;gBAAAE,QAAA,EAEvBV,KAAA,CAACJ,MAAM;kBAACyB,KAAK,EAAE,CAAE;kBAAAX,QAAA,GACfZ,IAAA,CAACH,KAAK;oBAACc,KAAK,EAAC,OAAO;oBAAAC,QAAA,EAAC;kBAAK,EAAQ,EAClCZ,IAAA,CAACH,KAAK;oBAACc,KAAK,EAAC,MAAM;oBAAAC,QAAA,EAAC;kBAAM,EAAQ;gBAAA;cAC3B;YACG,EACP;UAAA;QAEH;MACI;IACV,EACC;EAAA,EACU;AAEzB,CAAC;AAED,eAAeT,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}