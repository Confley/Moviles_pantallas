{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation } from '@react-navigation/native';\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\nimport { getAuth } from 'firebase/auth';\nimport { firebaseApp } from \"../firebase/credenciales\";\nimport { initializeApp } from 'firebase/app';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Profile = function Profile() {\n  var navigation = useNavigation();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    userInfo = _useState2[0],\n    setUserInfo = _useState2[1];\n  var firebaseApp = initializeApp(firebaseConfig);\n  useEffect(function () {\n    var auth = getAuth(firebaseApp);\n    var userId = auth.currentUser.uid;\n    var firestore = getFirestore(firebaseApp);\n    var userRef = doc(firestore, 'users', userId);\n    getDoc(userRef).then(function (docSnapshot) {\n      if (docSnapshot.exists()) {\n        setUserInfo(docSnapshot.data());\n      } else {\n        console.log('El usuario no existe en la base de datos');\n      }\n    }).catch(function (error) {\n      console.log('Error al obtener la información del usuario:', error);\n    });\n  }, []);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"#0069c0\",\n      barStyle: \"light-content\"\n    }), _jsx(View, {\n      style: styles.userContainer,\n      children: _jsx(Image, {\n        source: require(\"../images/usuario.png\"),\n        style: styles.userIcon\n      })\n    }), userInfo && _jsxs(View, {\n      style: styles.infoContainer,\n      children: [_jsxs(Text, {\n        style: styles.infoText,\n        children: [\"Nombre: \", userInfo.nombre]\n      }), _jsxs(Text, {\n        style: styles.infoText,\n        children: [\"Correo: \", userInfo.correo]\n      }), _jsxs(Text, {\n        style: styles.infoText,\n        children: [\"Rol: \", userInfo.rol]\n      }), _jsxs(Text, {\n        style: styles.infoText,\n        children: [\"Carrera: \", userInfo.carrera]\n      }), _jsxs(Text, {\n        style: styles.infoText,\n        children: [\"Semestre: \", userInfo.semestre]\n      }), _jsxs(Text, {\n        style: styles.infoText,\n        children: [\"N\\xFAmero de Control: \", userInfo.numeroControl]\n      }), _jsxs(Text, {\n        style: styles.infoText,\n        children: [\"Turno: \", userInfo.turno]\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.editButton,\n      onPress: function onPress() {\n        return navigation.navigate('EditInfo');\n      },\n      children: _jsx(Text, {\n        style: styles.editButtonText,\n        children: \"Editar informaci\\xF3n\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  userContainer: {\n    marginTop: 50,\n    marginBottom: 30,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  userIcon: {\n    width: 120,\n    height: 120,\n    resizeMode: 'contain'\n  },\n  infoContainer: {\n    marginBottom: 30,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  infoText: {\n    fontSize: 18,\n    marginVertical: 5\n  },\n  bold: {\n    fontWeight: 'bold'\n  },\n  editButton: {\n    backgroundColor: '#0069c0',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5\n  },\n  editButtonText: {\n    color: '#fff',\n    fontSize: 16\n  }\n});\nexport default Profile;","map":{"version":3,"names":["React","useState","useEffect","StyleSheet","Text","View","StatusBar","TouchableOpacity","Image","useNavigation","getFirestore","doc","getDoc","getAuth","firebaseApp","initializeApp","jsx","_jsx","jsxs","_jsxs","Profile","navigation","_useState","_useState2","_slicedToArray","userInfo","setUserInfo","firebaseConfig","auth","userId","currentUser","uid","firestore","userRef","then","docSnapshot","exists","data","console","log","catch","error","style","styles","container","children","backgroundColor","barStyle","userContainer","source","require","userIcon","infoContainer","infoText","nombre","correo","rol","carrera","semestre","numeroControl","turno","editButton","onPress","navigate","editButtonText","create","flex","alignItems","justifyContent","paddingHorizontal","marginTop","marginBottom","width","height","resizeMode","fontSize","marginVertical","bold","fontWeight","paddingVertical","borderRadius","color"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, Text, View, StatusBar, TouchableOpacity, Image } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { getFirestore, doc, getDoc } from 'firebase/firestore';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { firebaseApp } from '../firebase/credenciales';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\nconst Profile = () => {\r\n  const navigation = useNavigation();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const firebaseApp = initializeApp(firebaseConfig);\r\n  \r\n\r\n  useEffect(() => {\r\n    // Obtener ID del usuario actual\r\n    const auth = getAuth(firebaseApp);\r\n    const userId = auth.currentUser.uid;\r\n\r\n    // Obtener la información del usuario desde Firestore\r\n    const firestore = getFirestore(firebaseApp);\r\n    const userRef = doc(firestore, 'users', userId);\r\n\r\n    getDoc(userRef)\r\n      .then((docSnapshot) => {\r\n        if (docSnapshot.exists()) {\r\n          // Actualizar el estado con la información del usuario\r\n          setUserInfo(docSnapshot.data());\r\n        } else {\r\n          console.log('El usuario no existe en la base de datos');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('Error al obtener la información del usuario:', error);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"#0069c0\" barStyle=\"light-content\" />\r\n\r\n      <View style={styles.userContainer}>\r\n        <Image source={require('../images/usuario.png')} style={styles.userIcon} />\r\n      </View>\r\n\r\n      {userInfo && (\r\n        <View style={styles.infoContainer}>\r\n          <Text style={styles.infoText}>Nombre: {userInfo.nombre}</Text>\r\n          <Text style={styles.infoText}>Correo: {userInfo.correo}</Text>\r\n          <Text style={styles.infoText}>Rol: {userInfo.rol}</Text>\r\n          <Text style={styles.infoText}>Carrera: {userInfo.carrera}</Text>\r\n          <Text style={styles.infoText}>Semestre: {userInfo.semestre}</Text>\r\n          <Text style={styles.infoText}>Número de Control: {userInfo.numeroControl}</Text>\r\n          <Text style={styles.infoText}>Turno: {userInfo.turno}</Text>\r\n        </View>\r\n      )}\r\n\r\n      <TouchableOpacity style={styles.editButton} onPress={() => navigation.navigate('EditInfo')}>\r\n        <Text style={styles.editButtonText}>Editar información</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  userContainer: {\r\n    marginTop: 50,\r\n    marginBottom: 30,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  userIcon: {\r\n    width: 120,\r\n    height: 120,\r\n    resizeMode: 'contain',\r\n  },\r\n  infoContainer: {\r\n    marginBottom: 30,\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'flex-start',\r\n  },\r\n  infoText: {\r\n    fontSize: 18,\r\n    marginVertical: 5,\r\n  },\r\n  bold: {\r\n    fontWeight: 'bold',\r\n  },\r\n  editButton: {\r\n    backgroundColor: '#0069c0',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 5,\r\n  },\r\n  editButtonText: {\r\n    color: '#fff',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}