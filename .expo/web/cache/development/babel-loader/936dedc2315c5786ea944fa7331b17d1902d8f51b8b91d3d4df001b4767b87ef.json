{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen(navigation) {\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsx(Text, {\n      children: \"Settings Screen\"\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('SecondScreen');\n      },\n      children: _jsx(Text, {\n        children: \"Go to Second Screen\"\n      })\n    })]\n  });\n};\nfunction SecondScreen() {\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsx(Text, {\n      children: \"Second Screen\"\n    })\n  });\n}\nvar Stack = createStackNavigator();\nfunction MainStackNavigator() {\n  return _jsxs(Stack.Navigator, {\n    children: [_jsx(Stack.Screen, {\n      name: \"Home\",\n      component: HomeScreen\n    }), _jsx(Stack.Screen, {\n      name: \"SecondScreen\",\n      component: SecondScreen\n    })]\n  });\n}\nexport default SettingsScreen;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","createStackNavigator","jsx","_jsx","jsxs","_jsxs","SettingsScreen","navigation","style","flex","alignItems","justifyContent","children","onPress","navigate","SecondScreen","Stack","MainStackNavigator","Navigator","Screen","name","component","HomeScreen"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/SettingScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\n\r\nconst SettingsScreen = (navigation ) => {\r\n  return (\r\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n      <Text>Settings Screen</Text>\r\n      <TouchableOpacity onPress={() => navigation.navigate('SecondScreen')}>\r\n        <Text>Go to Second Screen</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nfunction SecondScreen() {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Second Screen</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction MainStackNavigator() {\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n      <Stack.Screen name=\"SecondScreen\" component={SecondScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default SettingsScreen;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE1B,SAASC,oBAAoB,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/D,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,UAAU,EAAM;EACtC,OACEF,KAAA,CAACP,IAAI;IAACU,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACvET,IAAA,CAACJ,IAAI;MAAAa,QAAA,EAAC;IAAe,EAAO,EAC5BT,IAAA,CAACH,gBAAgB;MAACa,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAACO,QAAQ,CAAC,cAAc,CAAC;MAAA,CAAC;MAAAF,QAAA,EACnET,IAAA,CAACJ,IAAI;QAAAa,QAAA,EAAC;MAAmB;IAAO,EACf;EAAA,EACd;AAEX,CAAC;AAED,SAASG,YAAYA,CAAA,EAAG;EACtB,OACEZ,IAAA,CAACL,IAAI;IAACU,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEE,cAAc,EAAE,QAAQ;MAAED,UAAU,EAAE;IAAS,CAAE;IAAAE,QAAA,EACvET,IAAA,CAACJ,IAAI;MAAAa,QAAA,EAAC;IAAa;EAAO,EACrB;AAEX;AAEA,IAAMI,KAAK,GAAGf,oBAAoB,EAAE;AAEpC,SAASgB,kBAAkBA,CAAA,EAAG;EAC5B,OACEZ,KAAA,CAACW,KAAK,CAACE,SAAS;IAAAN,QAAA,GACdT,IAAA,CAACa,KAAK,CAACG,MAAM;MAACC,IAAI,EAAC,MAAM;MAACC,SAAS,EAAEC;IAAW,EAAG,EACnDnB,IAAA,CAACa,KAAK,CAACG,MAAM;MAACC,IAAI,EAAC,cAAc;MAACC,SAAS,EAAEN;IAAa,EAAG;EAAA,EAC7C;AAEtB;AAEA,eAAeT,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}