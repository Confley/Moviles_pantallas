{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ScrollView, TouchableOpacity } from 'react-native-gesture-handler';\nimport colors from \"../../assets/theme/colors\";\nimport AppModal from \"../common/AppModal\";\nimport Icon from \"../common/Icon\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SettingsComponent = function SettingsComponent(_ref) {\n  var modalVisible = _ref.modalVisible,\n    setModalVisible = _ref.setModalVisible,\n    settingsOptions = _ref.settingsOptions,\n    prefArr = _ref.prefArr;\n  return _jsxs(_Fragment, {\n    children: [_jsx(AppModal, {\n      modalVisible: modalVisible,\n      modalFooter: _jsx(_Fragment, {}),\n      closeOnTouchOutside: false,\n      modalBody: _jsx(View, {\n        children: prefArr.map(function (_ref2) {\n          var name = _ref2.name,\n            selected = _ref2.selected,\n            onPress = _ref2.onPress;\n          return _jsx(View, {\n            children: _jsxs(TouchableOpacity, {\n              onPress: onPress,\n              style: {\n                flexDirection: 'row',\n                paddingVertical: 5,\n                alignItems: 'center'\n              },\n              children: [selected && _jsx(Icon, {\n                size: 17,\n                name: \"check\",\n                type: \"material\"\n              }), _jsx(Text, {\n                style: {\n                  fontSize: 17,\n                  paddingLeft: selected ? 15 : 30\n                },\n                children: name\n              })]\n            })\n          }, name);\n        })\n      }),\n      title: \"Sort by\",\n      setModalVisible: setModalVisible\n    }), _jsx(ScrollView, {\n      style: {\n        backgroundColor: colors.white\n      },\n      children: settingsOptions.map(function (_ref3, index) {\n        var title = _ref3.title,\n          subTitle = _ref3.subTitle,\n          onPress = _ref3.onPress;\n        return _jsxs(TouchableOpacity, {\n          onPress: onPress,\n          children: [_jsxs(View, {\n            style: {\n              paddingHorizontal: 20,\n              paddingBottom: 20,\n              paddingTop: 20\n            },\n            children: [_jsx(Text, {\n              style: {\n                fontSize: 17\n              },\n              children: title\n            }), subTitle && _jsx(Text, {\n              style: {\n                fontSize: 14,\n                opacity: 0.5,\n                paddingTop: 5\n              },\n              children: subTitle\n            })]\n          }), _jsx(View, {\n            style: {\n              height: 0.5,\n              backgroundColor: colors.grey\n            }\n          })]\n        }, title);\n      })\n    })]\n  });\n};\nexport default SettingsComponent;","map":{"version":3,"names":["React","View","Text","ScrollView","TouchableOpacity","colors","AppModal","Icon","Fragment","_Fragment","jsx","_jsx","jsxs","_jsxs","SettingsComponent","_ref","modalVisible","setModalVisible","settingsOptions","prefArr","children","modalFooter","closeOnTouchOutside","modalBody","map","_ref2","name","selected","onPress","style","flexDirection","paddingVertical","alignItems","size","type","fontSize","paddingLeft","title","backgroundColor","white","_ref3","index","subTitle","paddingHorizontal","paddingBottom","paddingTop","opacity","height","grey"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/components/SettingsComponent.js"],"sourcesContent":["import React from 'react';\r\nimport {View, Text} from 'react-native';\r\nimport {ScrollView, TouchableOpacity} from 'react-native-gesture-handler';\r\nimport colors from '../../assets/theme/colors';\r\nimport AppModal from '../common/AppModal';\r\nimport Icon from '../common/Icon';\r\n\r\nconst SettingsComponent = ({\r\n  modalVisible,\r\n  setModalVisible,\r\n  settingsOptions,\r\n  prefArr,\r\n}) => {\r\n  return (\r\n    <>\r\n      <AppModal\r\n        modalVisible={modalVisible}\r\n        modalFooter={<></>}\r\n        closeOnTouchOutside={false}\r\n        modalBody={\r\n          <View>\r\n            {prefArr.map(({name, selected, onPress}) => (\r\n              <View key={name}>\r\n                <TouchableOpacity\r\n                  onPress={onPress}\r\n                  style={{\r\n                    flexDirection: 'row',\r\n                    paddingVertical: 5,\r\n                    alignItems: 'center',\r\n                  }}>\r\n                  {selected && <Icon size={17} name=\"check\" type=\"material\" />}\r\n                  <Text style={{fontSize: 17, paddingLeft: selected ? 15 : 30}}>\r\n                    {name}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        }\r\n        title=\"Sort by\"\r\n        setModalVisible={setModalVisible}\r\n      />\r\n      <ScrollView style={{backgroundColor: colors.white}}>\r\n        {settingsOptions.map(({title, subTitle, onPress}, index) => (\r\n          <TouchableOpacity key={title} onPress={onPress}>\r\n            <View\r\n              style={{\r\n                paddingHorizontal: 20,\r\n                paddingBottom: 20,\r\n                paddingTop: 20,\r\n              }}>\r\n              <Text style={{fontSize: 17}}>{title}</Text>\r\n              {subTitle && (\r\n                <Text style={{fontSize: 14, opacity: 0.5, paddingTop: 5}}>\r\n                  {subTitle}\r\n                </Text>\r\n              )}\r\n            </View>\r\n\r\n            <View style={{height: 0.5, backgroundColor: colors.grey}} />\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SettingsComponent;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAE1B,SAAQC,UAAU,EAAEC,gBAAgB,QAAO,8BAA8B;AACzE,OAAOC,MAAM;AACb,OAAOC,QAAQ;AACf,OAAOC,IAAI;AAAuB,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElC,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAAC,IAAA,EAKjB;EAAA,IAJJC,YAAY,GAAAD,IAAA,CAAZC,YAAY;IACZC,eAAe,GAAAF,IAAA,CAAfE,eAAe;IACfC,eAAe,GAAAH,IAAA,CAAfG,eAAe;IACfC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;EAEP,OACEN,KAAA,CAAAJ,SAAA;IAAAW,QAAA,GACET,IAAA,CAACL,QAAQ;MACPU,YAAY,EAAEA,YAAa;MAC3BK,WAAW,EAAEV,IAAA,CAAAF,SAAA,KAAM;MACnBa,mBAAmB,EAAE,KAAM;MAC3BC,SAAS,EACPZ,IAAA,CAACV,IAAI;QAAAmB,QAAA,EACFD,OAAO,CAACK,GAAG,CAAC,UAAAC,KAAA;UAAA,IAAEC,IAAI,GAAAD,KAAA,CAAJC,IAAI;YAAEC,QAAQ,GAAAF,KAAA,CAARE,QAAQ;YAAEC,OAAO,GAAAH,KAAA,CAAPG,OAAO;UAAA,OACpCjB,IAAA,CAACV,IAAI;YAAAmB,QAAA,EACHP,KAAA,CAACT,gBAAgB;cACfwB,OAAO,EAAEA,OAAQ;cACjBC,KAAK,EAAE;gBACLC,aAAa,EAAE,KAAK;gBACpBC,eAAe,EAAE,CAAC;gBAClBC,UAAU,EAAE;cACd,CAAE;cAAAZ,QAAA,GACDO,QAAQ,IAAIhB,IAAA,CAACJ,IAAI;gBAAC0B,IAAI,EAAE,EAAG;gBAACP,IAAI,EAAC,OAAO;gBAACQ,IAAI,EAAC;cAAU,EAAG,EAC5DvB,IAAA,CAACT,IAAI;gBAAC2B,KAAK,EAAE;kBAACM,QAAQ,EAAE,EAAE;kBAAEC,WAAW,EAAET,QAAQ,GAAG,EAAE,GAAG;gBAAE,CAAE;gBAAAP,QAAA,EAC1DM;cAAI,EACA;YAAA;UACU,GAZVA,IAAI,CAaR;QAAA,CACR;MAAC,EAEL;MACDW,KAAK,EAAC,SAAS;MACfpB,eAAe,EAAEA;IAAgB,EACjC,EACFN,IAAA,CAACR,UAAU;MAAC0B,KAAK,EAAE;QAACS,eAAe,EAAEjC,MAAM,CAACkC;MAAK,CAAE;MAAAnB,QAAA,EAChDF,eAAe,CAACM,GAAG,CAAC,UAAAgB,KAAA,EAA6BC,KAAK;QAAA,IAAhCJ,KAAK,GAAAG,KAAA,CAALH,KAAK;UAAEK,QAAQ,GAAAF,KAAA,CAARE,QAAQ;UAAEd,OAAO,GAAAY,KAAA,CAAPZ,OAAO;QAAA,OAC7Cf,KAAA,CAACT,gBAAgB;UAAawB,OAAO,EAAEA,OAAQ;UAAAR,QAAA,GAC7CP,KAAA,CAACZ,IAAI;YACH4B,KAAK,EAAE;cACLc,iBAAiB,EAAE,EAAE;cACrBC,aAAa,EAAE,EAAE;cACjBC,UAAU,EAAE;YACd,CAAE;YAAAzB,QAAA,GACFT,IAAA,CAACT,IAAI;cAAC2B,KAAK,EAAE;gBAACM,QAAQ,EAAE;cAAE,CAAE;cAAAf,QAAA,EAAEiB;YAAK,EAAQ,EAC1CK,QAAQ,IACP/B,IAAA,CAACT,IAAI;cAAC2B,KAAK,EAAE;gBAACM,QAAQ,EAAE,EAAE;gBAAEW,OAAO,EAAE,GAAG;gBAAED,UAAU,EAAE;cAAC,CAAE;cAAAzB,QAAA,EACtDsB;YAAQ,EAEZ;UAAA,EACI,EAEP/B,IAAA,CAACV,IAAI;YAAC4B,KAAK,EAAE;cAACkB,MAAM,EAAE,GAAG;cAAET,eAAe,EAAEjC,MAAM,CAAC2C;YAAI;UAAE,EAAG;QAAA,GAfvCX,KAAK,CAgBT;MAAA,CACpB;IAAC,EACS;EAAA,EACZ;AAEP,CAAC;AAED,eAAevB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}