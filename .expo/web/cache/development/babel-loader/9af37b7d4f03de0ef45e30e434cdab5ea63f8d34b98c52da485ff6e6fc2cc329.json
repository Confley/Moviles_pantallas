{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useEffect } from \"react-native-web/dist/index\";\nimport SettingsComponent from \"../components\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar SettingsScreen = function SettingsScreen() {\n  var _React$useState = React.useState(null),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    modalVisible = _React$useState4[0],\n    setModalVisible = _React$useState4[1];\n  var _React$useState5 = React.useState(null),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    sortBy = _React$useState6[0],\n    setSortBy = _React$useState6[1];\n  var saveSetting = function saveSetting(key, value) {\n    AsyncStorage.setItem(key, value);\n  };\n  var settingsOptions = [{\n    title: 'My Info',\n    subTitle: 'Setup your profile',\n    onPress: function onPress() {}\n  }, {\n    title: 'Accounts',\n    subTitle: null,\n    onPress: function onPress() {}\n  }, {\n    title: 'Default account for new contacts',\n    subTitle: email,\n    onPress: function onPress() {}\n  }, {\n    title: 'Contacts to display',\n    subTitle: 'All contacts',\n    onPress: function onPress() {}\n  }, {\n    title: 'Sort by',\n    subTitle: sortBy,\n    onPress: function onPress() {\n      setModalVisible(true);\n    }\n  }, {\n    title: 'Name format',\n    subTitle: 'First name first',\n    onPress: function onPress() {}\n  }, {\n    title: 'Import',\n    subTitle: null,\n    onPress: function onPress() {}\n  }, {\n    title: 'Export',\n    subTitle: null,\n    onPress: function onPress() {}\n  }, {\n    title: 'Blocked numbers',\n    subTitle: null,\n    onPress: function onPress() {}\n  }, {\n    title: 'About RNContacts',\n    subTitle: null,\n    onPress: function onPress() {}\n  }];\n  var prefArr = [{\n    name: 'First Name',\n    selected: sortBy === 'First Name',\n    onPress: function onPress() {\n      saveSetting('sortBy', 'First Name');\n      setSortBy('First Name');\n      setModalVisible(false);\n    }\n  }, {\n    name: 'Last Name',\n    selected: sortBy === 'Last Name',\n    onPress: function onPress() {\n      saveSetting('sortBy', 'Last Name');\n      setSortBy('Last Name');\n      setModalVisible(false);\n    }\n  }];\n  var getSettings = function () {\n    var _ref = _asyncToGenerator(function* () {\n      var user = yield AsyncStorage.getItem('user');\n      setEmail(JSON.parse(user).email);\n      var sortPref = yield AsyncStorage.getItem('sortBy');\n      if (sortPref) {\n        setSortBy(sortPref);\n      }\n    });\n    return function getSettings() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getSettings();\n  }, []);\n  return _jsx(SettingsComponent, {\n    modalVisible: modalVisible,\n    setModalVisible: setModalVisible,\n    settingsOptions: settingsOptions,\n    prefArr: prefArr\n  });\n};\nexport default SettingsScreen;","map":{"version":3,"names":["React","useEffect","SettingsComponent","jsx","_jsx","SettingsScreen","_React$useState","useState","_React$useState2","_slicedToArray","email","setEmail","_React$useState3","_React$useState4","modalVisible","setModalVisible","_React$useState5","_React$useState6","sortBy","setSortBy","saveSetting","key","value","AsyncStorage","setItem","settingsOptions","title","subTitle","onPress","prefArr","name","selected","getSettings","_ref","_asyncToGenerator","user","getItem","JSON","parse","sortPref","apply","arguments"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/SettingScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { useEffect } from 'react-native';\r\nimport SettingsComponent from '../components';\r\n\r\nconst SettingsScreen = () => {\r\n\r\n  const [email, setEmail] = React.useState(null);\r\n  const [modalVisible, setModalVisible] = React.useState(false);\r\n  const [sortBy, setSortBy] = React.useState(null);\r\n\r\n  const saveSetting = (key, value) => {\r\n    AsyncStorage.setItem(key, value);\r\n  };\r\n\r\n  const settingsOptions = [\r\n    {title: 'My Info', subTitle: 'Setup your profile', onPress: () => {}},\r\n    {title: 'Accounts', subTitle: null, onPress: () => {}},\r\n    {\r\n      title: 'Default account for new contacts',\r\n      subTitle: email,\r\n      onPress: () => {},\r\n    },\r\n    {title: 'Contacts to display', subTitle: 'All contacts', onPress: () => {}},\r\n    {\r\n      title: 'Sort by',\r\n      subTitle: sortBy,\r\n      onPress: () => {\r\n        setModalVisible(true);\r\n      },\r\n    },\r\n    {title: 'Name format', subTitle: 'First name first', onPress: () => {}},\r\n    {title: 'Import', subTitle: null, onPress: () => {}},\r\n    {title: 'Export', subTitle: null, onPress: () => {}},\r\n    {title: 'Blocked numbers', subTitle: null, onPress: () => {}},\r\n    {title: 'About RNContacts', subTitle: null, onPress: () => {}},\r\n  ];\r\n\r\n  const prefArr = [\r\n    {\r\n      name: 'First Name',\r\n      selected: sortBy === 'First Name',\r\n\r\n      onPress: () => {\r\n        saveSetting('sortBy', 'First Name');\r\n        setSortBy('First Name');\r\n        setModalVisible(false);\r\n      },\r\n    },\r\n    {\r\n      name: 'Last Name',\r\n      selected: sortBy === 'Last Name',\r\n      onPress: () => {\r\n        saveSetting('sortBy', 'Last Name');\r\n        setSortBy('Last Name');\r\n        setModalVisible(false);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const getSettings = async () => {\r\n    const user = await AsyncStorage.getItem('user');\r\n    setEmail(JSON.parse(user).email);\r\n\r\n    const sortPref = await AsyncStorage.getItem('sortBy');\r\n    if (sortPref) {\r\n      setSortBy(sortPref);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getSettings();\r\n  }, []);\r\n\r\n  return (\r\n    <SettingsComponent\r\n      modalVisible={modalVisible}\r\n      setModalVisible={setModalVisible}\r\n      settingsOptions={settingsOptions}\r\n      prefArr={prefArr}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SettingsScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}