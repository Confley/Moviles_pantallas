{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport \"react-native-gesture-handler\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { SimpleLineIcons, MaterialIcons, MaterialCommunityIcons, FontAwesome } from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { DrawerItemList, createDrawerNavigator } from \"@react-navigation/drawer\";\nimport User from \"./assets/user.jpg\";\nimport Backups from \"./screens/Backups\";\nimport Categories from \"./screens/Categories\";\nimport Contact from \"./screens/Contact\";\nimport Customize from \"./screens/Customize\";\nimport GetPremium from \"./screens/GetPremium\";\nimport Home from \"./screens/Home\";\nimport RateApp from \"./screens/RateApp\";\nimport Settings from \"./screens/Settings\";\nimport Timer from \"./screens/Timer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return _jsxs(SafeAreaView, {\n          children: [_jsxs(View, {\n            style: {\n              height: 200,\n              width: '100%',\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              borderBottomColor: \"#f4f4f4\",\n              borderBottomWidth: 1\n            },\n            children: [_jsx(Image, {\n              source: User,\n              style: {\n                height: 130,\n                width: 130,\n                borderRadius: 65\n              }\n            }), _jsx(Text, {\n              style: {\n                fontSize: 22,\n                marginVertical: 6,\n                fontWeight: \"bold\",\n                color: \"#111\"\n              },\n              children: \"Isabella Joanna\"\n            }), _jsx(Text, {\n              style: {\n                fontSize: 16,\n                color: \"#111\"\n              },\n              children: \"Product Manager\"\n            })]\n          }), _jsx(DrawerItemList, _objectSpread({}, props))]\n        });\n      },\n      screenOptions: {\n        drawerStyle: {\n          backgroundColor: \"#fff\",\n          width: 250\n        },\n        headerStyle: {\n          backgroundColor: \"#f4511e\"\n        },\n        headerTintColor: \"#fff\",\n        headerTitleStyle: {\n          fontWeight: \"bold\"\n        },\n        drawerLabelStyle: {\n          color: \"#111\"\n        }\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"Home\",\n        options: {\n          drawerLabel: \"Home\",\n          title: \"Home\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(SimpleLineIcons, {\n              name: \"home\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: Home\n      }), _jsx(Drawer.Screen, {\n        name: \"Timer\",\n        options: {\n          drawerLabel: \"Timer\",\n          title: \"Timer\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(MaterialIcons, {\n              name: \"timer\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: Timer\n      }), _jsx(Drawer.Screen, {\n        name: \"Categories\",\n        options: {\n          drawerLabel: \"Categories\",\n          title: \"Categories\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(MaterialIcons, {\n              name: \"category\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: Categories\n      }), _jsx(Drawer.Screen, {\n        name: \"Customize\",\n        options: {\n          drawerLabel: \"Customize\",\n          title: \"Customize\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(MaterialIcons, {\n              name: \"dashboard-customize\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: Customize\n      }), _jsx(Drawer.Screen, {\n        name: \"Settings\",\n        options: {\n          drawerLabel: \"Settings\",\n          title: \"Settings\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(SimpleLineIcons, {\n              name: \"settings\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: Settings\n      }), _jsx(Drawer.Screen, {\n        name: \"Backups\",\n        options: {\n          drawerLabel: \"Backups\",\n          title: \"Backups\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(MaterialIcons, {\n              name: \"backup\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: Backups\n      }), _jsx(Drawer.Screen, {\n        name: \"Get Premium\",\n        options: {\n          drawerLabel: \"Get Premuim\",\n          title: \"Get Premium\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(MaterialCommunityIcons, {\n              name: \"certificate\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: GetPremium\n      }), _jsx(Drawer.Screen, {\n        name: \"Rate this App\",\n        options: {\n          drawerLabel: \"Rate this App\",\n          title: \"Rate this App\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(FontAwesome, {\n              name: \"star\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: RateApp\n      }), _jsx(Drawer.Screen, {\n        name: \"Contact\",\n        options: {\n          drawerLabel: \"Contact\",\n          title: \"Contact\",\n          drawerIcon: function drawerIcon() {\n            return _jsx(MaterialCommunityIcons, {\n              name: \"message-alert-outline\",\n              size: 20,\n              color: \"#808080\"\n            });\n          }\n        },\n        component: Contact\n      })]\n    })\n  });\n}","map":{"version":3,"names":["View","Text","Image","SimpleLineIcons","MaterialIcons","MaterialCommunityIcons","FontAwesome","SafeAreaView","NavigationContainer","DrawerItemList","createDrawerNavigator","User","Backups","Categories","Contact","Customize","GetPremium","Home","RateApp","Settings","Timer","jsx","_jsx","jsxs","_jsxs","Drawer","App","children","Navigator","drawerContent","props","style","height","width","justifyContent","alignItems","borderBottomColor","borderBottomWidth","source","borderRadius","fontSize","marginVertical","fontWeight","color","_objectSpread","screenOptions","drawerStyle","backgroundColor","headerStyle","headerTintColor","headerTitleStyle","drawerLabelStyle","Screen","name","options","drawerLabel","title","drawerIcon","size","component"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/App.js"],"sourcesContent":["import \"react-native-gesture-handler\";\nimport { View, Text, Image } from \"react-native\";\nimport {\n  SimpleLineIcons,\n  MaterialIcons,\n  MaterialCommunityIcons,\n  FontAwesome\n} from \"@expo/vector-icons\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { DrawerItemList, createDrawerNavigator } from \"@react-navigation/drawer\";\nimport User from \"./assets/user.jpg\";\nimport Backups from \"./screens/Backups\";\nimport Categories from \"./screens/Categories\";\nimport Contact from \"./screens/Contact\";\nimport Customize from \"./screens/Customize\";\nimport GetPremium from \"./screens/GetPremium\";\nimport Home from \"./screens/Home\";\nimport RateApp from \"./screens/RateApp\";\nimport Settings from \"./screens/Settings\";\nimport Timer from \"./screens/Timer\";\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator\n        drawerContent={\n          (props) => {\n            return (\n              <SafeAreaView>\n                <View\n                  style={{\n                    height: 200,\n                    width: '100%',\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    borderBottomColor: \"#f4f4f4\",\n                    borderBottomWidth: 1\n                  }}\n                >\n                  <Image\n                    source={User}\n                    style={{\n                      height: 130,\n                      width: 130,\n                      borderRadius: 65\n                    }}\n                  />\n                  <Text\n                    style={{\n                      fontSize: 22,\n                      marginVertical: 6,\n                      fontWeight: \"bold\",\n                      color: \"#111\"\n                    }}\n                  >Isabella Joanna</Text>\n                  <Text\n                    style={{\n                      fontSize: 16,\n                      color: \"#111\"\n                    }}\n                  >Product Manager</Text>\n                </View>\n                <DrawerItemList {...props} />\n              </SafeAreaView>\n            )\n          }\n        }\n        screenOptions={{\n          drawerStyle: {\n            backgroundColor: \"#fff\",\n            width: 250\n          },\n          headerStyle: {\n            backgroundColor: \"#f4511e\",\n          },\n          headerTintColor: \"#fff\",\n          headerTitleStyle: {\n            fontWeight: \"bold\"\n          },\n          drawerLabelStyle: {\n            color: \"#111\"\n          }\n        }}\n      >\n        <Drawer.Screen\n          name=\"Home\"\n          options={{\n            drawerLabel: \"Home\",\n            title: \"Home\",\n            drawerIcon: () => (\n              <SimpleLineIcons name=\"home\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={Home}\n        />\n        <Drawer.Screen\n          name=\"Timer\"\n          options={{\n            drawerLabel: \"Timer\",\n            title: \"Timer\",\n            drawerIcon: () => (\n              <MaterialIcons name=\"timer\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={Timer}\n        />\n        <Drawer.Screen\n          name=\"Categories\"\n          options={{\n            drawerLabel: \"Categories\",\n            title: \"Categories\",\n            drawerIcon: () => (\n              <MaterialIcons name=\"category\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={Categories}\n        />\n        <Drawer.Screen\n          name=\"Customize\"\n          options={{\n            drawerLabel: \"Customize\",\n            title: \"Customize\",\n            drawerIcon: () => (\n              <MaterialIcons name=\"dashboard-customize\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={Customize}\n        />\n        <Drawer.Screen\n          name=\"Settings\"\n          options={{\n            drawerLabel: \"Settings\",\n            title: \"Settings\",\n            drawerIcon: () => (\n              <SimpleLineIcons name=\"settings\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={Settings}\n        />\n\n        <Drawer.Screen\n          name=\"Backups\"\n          options={{\n            drawerLabel: \"Backups\",\n            title: \"Backups\",\n            drawerIcon: () => (\n              <MaterialIcons name=\"backup\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={Backups}\n        />\n\n        <Drawer.Screen\n          name=\"Get Premium\"\n          options={{\n            drawerLabel: \"Get Premuim\",\n            title: \"Get Premium\",\n            drawerIcon: () => (\n              <MaterialCommunityIcons name=\"certificate\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={GetPremium}\n        />\n        <Drawer.Screen\n          name=\"Rate this App\"\n          options={{\n            drawerLabel: \"Rate this App\",\n            title: \"Rate this App\",\n            drawerIcon: () => (\n              <FontAwesome name=\"star\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={RateApp}\n        />\n\n        <Drawer.Screen\n          name=\"Contact\"\n          options={{\n            drawerLabel: \"Contact\",\n            title: \"Contact\",\n            drawerIcon: () => (\n              <MaterialCommunityIcons name=\"message-alert-outline\" size={20} color=\"#808080\" />\n            )\n          }}\n          component={Contact}\n        />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}