{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator, DrawerContentScrollView } from \"@react-navigation/drawer\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { NativeBaseProvider, Button, Box, HamburgerIcon, Pressable, Heading, VStack, Text, Center, HStack, Divider, Icon } from \"native-base\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nglobal.__reanimatedWorkletInit = function () {};\nvar Drawer = createDrawerNavigator();\nfunction Component(props) {\n  return _jsx(Center, {\n    children: _jsxs(Text, {\n      mt: \"12\",\n      fontSize: \"18\",\n      children: [\"This is \", props.route.name, \" page.\"]\n    })\n  });\n}\nvar getIcon = function getIcon(screenName) {\n  switch (screenName) {\n    case \"Inbox\":\n      return \"email\";\n    case \"Outbox\":\n      return \"send\";\n    case \"Favorites\":\n      return \"heart\";\n    case \"Archive\":\n      return \"archive\";\n    case \"Trash\":\n      return \"trash-can\";\n    case \"Spam\":\n      return \"alert-circle\";\n    default:\n      return undefined;\n  }\n};\nfunction CustomDrawerContent(props) {\n  return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    safeArea: true,\n    children: _jsxs(VStack, {\n      space: \"6\",\n      my: \"2\",\n      mx: \"1\",\n      children: [_jsxs(Box, {\n        px: \"4\",\n        children: [_jsx(Text, {\n          bold: true,\n          color: \"gray.700\",\n          children: \"Mail\"\n        }), _jsx(Text, {\n          fontSize: \"14\",\n          mt: \"1\",\n          color: \"gray.500\",\n          fontWeight: \"500\",\n          children: \"john_doe@gmail.com\"\n        })]\n      }), _jsxs(VStack, {\n        divider: _jsx(Divider, {}),\n        space: \"4\",\n        children: [_jsx(VStack, {\n          space: \"3\",\n          children: props.state.routeNames.map(function (name, index) {\n            return _jsx(Pressable, {\n              px: \"5\",\n              py: \"3\",\n              rounded: \"md\",\n              bg: index === props.state.index ? \"rgba(6, 182, 212, 0.1)\" : \"transparent\",\n              onPress: function onPress(event) {\n                props.navigation.navigate(name);\n              },\n              children: _jsxs(HStack, {\n                space: \"7\",\n                alignItems: \"center\",\n                children: [_jsx(Icon, {\n                  color: index === props.state.index ? \"primary.500\" : \"gray.500\",\n                  size: \"5\",\n                  as: _jsx(MaterialCommunityIcons, {\n                    name: getIcon(name)\n                  })\n                }), _jsx(Text, {\n                  fontWeight: \"500\",\n                  color: index === props.state.index ? \"primary.500\" : \"gray.700\",\n                  children: name\n                })]\n              })\n            });\n          })\n        }), _jsxs(VStack, {\n          space: \"5\",\n          children: [_jsx(Text, {\n            fontWeight: \"500\",\n            fontSize: \"14\",\n            px: \"5\",\n            color: \"gray.500\",\n            children: \"Labels\"\n          }), _jsxs(VStack, {\n            space: \"3\",\n            children: [_jsx(Pressable, {\n              px: \"5\",\n              py: \"3\",\n              children: _jsxs(HStack, {\n                space: \"7\",\n                alignItems: \"center\",\n                children: [_jsx(Icon, {\n                  color: \"gray.500\",\n                  size: \"5\",\n                  as: _jsx(MaterialCommunityIcons, {\n                    name: \"bookmark\"\n                  })\n                }), _jsx(Text, {\n                  color: \"gray.700\",\n                  fontWeight: \"500\",\n                  children: \"Family\"\n                })]\n              })\n            }), _jsx(Pressable, {\n              px: \"5\",\n              py: \"2\",\n              children: _jsxs(HStack, {\n                space: \"7\",\n                alignItems: \"center\",\n                children: [_jsx(Icon, {\n                  color: \"gray.500\",\n                  size: \"5\",\n                  as: _jsx(MaterialCommunityIcons, {\n                    name: \"bookmark\"\n                  })\n                }), _jsx(Text, {\n                  color: \"gray.700\",\n                  fontWeight: \"500\",\n                  children: \"Friends\"\n                })]\n              })\n            }), _jsx(Pressable, {\n              px: \"5\",\n              py: \"3\",\n              children: _jsxs(HStack, {\n                space: \"7\",\n                alignItems: \"center\",\n                children: [_jsx(Icon, {\n                  color: \"gray.500\",\n                  size: \"5\",\n                  as: _jsx(MaterialCommunityIcons, {\n                    name: \"bookmark\"\n                  })\n                }), _jsx(Text, {\n                  fontWeight: \"500\",\n                  color: \"gray.700\",\n                  children: \"Work\"\n                })]\n              })\n            })]\n          })]\n        })]\n      })]\n    })\n  }));\n}\nfunction MyDrawer() {\n  return _jsx(Box, {\n    safeArea: true,\n    flex: 1,\n    children: _jsxs(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return _jsx(CustomDrawerContent, _objectSpread({}, props));\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"Inbox\",\n        component: Component\n      }), _jsx(Drawer.Screen, {\n        name: \"Outbox\",\n        component: Component\n      }), _jsx(Drawer.Screen, {\n        name: \"Favorites\",\n        component: Component\n      }), _jsx(Drawer.Screen, {\n        name: \"Archive\",\n        component: Component\n      }), _jsx(Drawer.Screen, {\n        name: \"Trash\",\n        component: Component\n      }), _jsx(Drawer.Screen, {\n        name: \"Spam\",\n        component: Component\n      })]\n    })\n  });\n}\nexport default function Example() {\n  return _jsx(NavigationContainer, {\n    children: _jsx(NativeBaseProvider, {\n      children: _jsx(MyDrawer, {})\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createDrawerNavigator","DrawerContentScrollView","MaterialCommunityIcons","NativeBaseProvider","Button","Box","HamburgerIcon","Pressable","Heading","VStack","Text","Center","HStack","Divider","Icon","jsxs","_jsxs","jsx","_jsx","global","__reanimatedWorkletInit","Drawer","Component","props","children","mt","fontSize","route","name","getIcon","screenName","undefined","CustomDrawerContent","_objectSpread","safeArea","space","my","mx","px","bold","color","fontWeight","divider","state","routeNames","map","index","py","rounded","bg","onPress","event","navigation","navigate","alignItems","size","as","MyDrawer","flex","Navigator","drawerContent","Screen","component","Example"],"sources":["D:/expo projects/DNavigator/App.js"],"sourcesContent":["import * as React from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n} from \"@react-navigation/drawer\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport {\n  NativeBaseProvider,\n  Button,\n  Box,\n  HamburgerIcon,\n  Pressable,\n  Heading,\n  VStack,\n  Text,\n  Center,\n  HStack,\n  Divider,\n  Icon,\n} from \"native-base\";\nglobal.__reanimatedWorkletInit = () => {};\nconst Drawer = createDrawerNavigator();\nfunction Component(props) {\n  return (\n    <Center>\n      <Text mt=\"12\" fontSize=\"18\">\n        This is {props.route.name} page.\n      </Text>\n    </Center>\n  );\n}\n\nconst getIcon = (screenName) => {\n  switch (screenName) {\n    case \"Inbox\":\n      return \"email\";\n    case \"Outbox\":\n      return \"send\";\n    case \"Favorites\":\n      return \"heart\";\n    case \"Archive\":\n      return \"archive\";\n    case \"Trash\":\n      return \"trash-can\";\n    case \"Spam\":\n      return \"alert-circle\";\n    default:\n      return undefined;\n  }\n};\n\nfunction CustomDrawerContent(props) {\n  return (\n    <DrawerContentScrollView {...props} safeArea>\n      <VStack space=\"6\" my=\"2\" mx=\"1\">\n        <Box px=\"4\">\n          <Text bold color=\"gray.700\">\n            Mail\n          </Text>\n          <Text fontSize=\"14\" mt=\"1\" color=\"gray.500\" fontWeight=\"500\">\n            john_doe@gmail.com\n          </Text>\n        </Box>\n        <VStack divider={<Divider />} space=\"4\">\n          <VStack space=\"3\">\n            {props.state.routeNames.map((name, index) => (\n              <Pressable\n                px=\"5\"\n                py=\"3\"\n                rounded=\"md\"\n                bg={\n                  index === props.state.index\n                    ? \"rgba(6, 182, 212, 0.1)\"\n                    : \"transparent\"\n                }\n                onPress={(event) => {\n                  props.navigation.navigate(name);\n                }}\n              >\n                <HStack space=\"7\" alignItems=\"center\">\n                  <Icon\n                    color={\n                      index === props.state.index ? \"primary.500\" : \"gray.500\"\n                    }\n                    size=\"5\"\n                    as={<MaterialCommunityIcons name={getIcon(name)} />}\n                  />\n                  <Text\n                    fontWeight=\"500\"\n                    color={\n                      index === props.state.index ? \"primary.500\" : \"gray.700\"\n                    }\n                  >\n                    {name}\n                  </Text>\n                </HStack>\n              </Pressable>\n            ))}\n          </VStack>\n          <VStack space=\"5\">\n            <Text fontWeight=\"500\" fontSize=\"14\" px=\"5\" color=\"gray.500\">\n              Labels\n            </Text>\n            <VStack space=\"3\">\n              <Pressable px=\"5\" py=\"3\">\n                <HStack space=\"7\" alignItems=\"center\">\n                  <Icon\n                    color=\"gray.500\"\n                    size=\"5\"\n                    as={<MaterialCommunityIcons name=\"bookmark\" />}\n                  />\n                  <Text color=\"gray.700\" fontWeight=\"500\">\n                    Family\n                  </Text>\n                </HStack>\n              </Pressable>\n              <Pressable px=\"5\" py=\"2\">\n                <HStack space=\"7\" alignItems=\"center\">\n                  <Icon\n                    color=\"gray.500\"\n                    size=\"5\"\n                    as={<MaterialCommunityIcons name=\"bookmark\" />}\n                  />\n                  <Text color=\"gray.700\" fontWeight=\"500\">\n                    Friends\n                  </Text>\n                </HStack>\n              </Pressable>\n              <Pressable px=\"5\" py=\"3\">\n                <HStack space=\"7\" alignItems=\"center\">\n                  <Icon\n                    color=\"gray.500\"\n                    size=\"5\"\n                    as={<MaterialCommunityIcons name=\"bookmark\" />}\n                  />\n                  <Text fontWeight=\"500\" color=\"gray.700\">\n                    Work\n                  </Text>\n                </HStack>\n              </Pressable>\n            </VStack>\n          </VStack>\n        </VStack>\n      </VStack>\n    </DrawerContentScrollView>\n  );\n}\nfunction MyDrawer() {\n  return (\n    <Box safeArea flex={1}>\n      <Drawer.Navigator\n        drawerContent={(props) => <CustomDrawerContent {...props} />}\n      >\n        <Drawer.Screen name=\"Inbox\" component={Component} />\n        <Drawer.Screen name=\"Outbox\" component={Component} />\n        <Drawer.Screen name=\"Favorites\" component={Component} />\n        <Drawer.Screen name=\"Archive\" component={Component} />\n        <Drawer.Screen name=\"Trash\" component={Component} />\n        <Drawer.Screen name=\"Spam\" component={Component} />\n      </Drawer.Navigator>\n    </Box>\n  );\n}\nexport default function Example() {\n  return (\n    <NavigationContainer>\n      <NativeBaseProvider>\n        <MyDrawer />\n      </NativeBaseProvider>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}