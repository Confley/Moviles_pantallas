{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { NativeBaseProvider, Center, Box, FormControl, Stack, Text, Button, HStack, Radio, VStack } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThemeSettingsScreen = function ThemeSettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedValue = _useState2[0],\n    setSelectedValue = _useState2[1];\n  var handleChange = function handleChange(value) {\n    setSelectedValue(value);\n  };\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(SafeAreaView, {\n      style: {\n        flex: 1\n      },\n      children: _jsxs(Center, {\n        flex: 1,\n        children: [_jsx(Box, {\n          maxWidth: \"90%\",\n          mx: \"auto\",\n          children: _jsx(FormControl, {\n            children: _jsxs(Stack, {\n              space: 4,\n              alignItems: \"center\",\n              children: [_jsx(Text, {\n                fontSize: \"xl\",\n                children: \"Tema:\"\n              }), _jsx(VStack, {\n                space: 4,\n                alignItems: \"flex-start\",\n                children: _jsx(Radio.Group, {\n                  name: \"theme\",\n                  value: selectedValue,\n                  onChange: handleChange,\n                  children: _jsxs(VStack, {\n                    space: 3,\n                    children: [_jsx(Radio, {\n                      value: \"light\",\n                      children: \"Claro\"\n                    }), _jsx(Radio, {\n                      value: \"dark\",\n                      children: \"Oscuro\"\n                    })]\n                  })\n                })\n              })]\n            })\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Regresar\"\n          })\n        })]\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#007AFF',\n    marginHorizontal: 20,\n    marginTop: 20,\n    height: 50,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default ThemeSettingsScreen;","map":{"version":3,"names":["React","useState","Image","StyleSheet","TouchableOpacity","SafeAreaView","NativeBaseProvider","Center","Box","FormControl","Stack","Text","Button","HStack","Radio","VStack","jsx","_jsx","jsxs","_jsxs","ThemeSettingsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedValue","setSelectedValue","handleChange","value","children","style","flex","maxWidth","mx","space","alignItems","fontSize","Group","name","onChange","styles","button","onPress","goBack","buttonText","create","backgroundColor","marginHorizontal","marginTop","height","borderRadius","justifyContent","color","fontWeight"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/Tema.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Image, StyleSheet, TouchableOpacity, SafeAreaView } from \"react-native\";\r\n\r\nimport {\r\n  NativeBaseProvider,\r\n  Center,\r\n  Box,\r\n  FormControl,\r\n  Stack,\r\n  Text,\r\n  Button,\r\n  HStack,\r\n  Radio,\r\n  VStack,\r\n} from \"native-base\";\r\n\r\nconst ThemeSettingsScreen = ({ navigation }) => {\r\n  const [selectedValue, setSelectedValue] = useState(\"light\");\r\n\r\n  const handleChange = (value) => {\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <SafeAreaView style={{ flex: 1 }}>\r\n        <Center flex={1}>\r\n          <Box maxWidth=\"90%\" mx=\"auto\">\r\n            <FormControl>\r\n              <Stack space={4} alignItems=\"center\">\r\n                <Text fontSize=\"xl\">Tema:</Text>\r\n                <VStack space={4} alignItems=\"flex-start\">\r\n                  <Radio.Group\r\n                    name=\"theme\"\r\n                    value={selectedValue}\r\n                    onChange={handleChange}\r\n                  >\r\n                    <VStack space={3}>\r\n                      <Radio value=\"light\">Claro</Radio>\r\n                      <Radio value=\"dark\">Oscuro</Radio>\r\n                    </VStack>\r\n                  </Radio.Group>\r\n                </VStack>\r\n              </Stack>\r\n            </FormControl>\r\n          </Box>\r\n          <TouchableOpacity style={styles.button} onPress={() => navigation.goBack()}>\r\n            <Text style={styles.buttonText}>Regresar</Text>\r\n          </TouchableOpacity>\r\n        </Center>\r\n      </SafeAreaView>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: '#007AFF',\r\n    marginHorizontal: 20,\r\n    marginTop: 20,\r\n    height: 50,\r\n    borderRadius: 5,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    color: '#FFFFFF',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n});\r\n\r\nexport default ThemeSettingsScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}