{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, StyleSheet, TouchableOpacity } from \"react\";\nimport { NativeBaseProvider, Center, Box, FormControl, Stack, Text, Button, HStack, Radio, VStack } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThemeSettingsScreen = function ThemeSettingsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"light\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedValue = _useState2[0],\n    setSelectedValue = _useState2[1];\n  var handleChange = function handleChange(value) {\n    setSelectedValue(value);\n  };\n  return _jsx(NativeBaseProvider, {\n    children: _jsxs(Center, {\n      flex: 1,\n      children: [_jsx(Box, {\n        maxWidth: \"90%\",\n        mx: \"auto\",\n        children: _jsx(FormControl, {\n          children: _jsxs(Stack, {\n            space: 4,\n            alignItems: \"center\",\n            children: [_jsx(Text, {\n              fontSize: \"xl\",\n              children: \"Tema:\"\n            }), _jsx(VStack, {\n              space: 4,\n              alignItems: \"flex-start\",\n              children: _jsx(Radio.Group, {\n                name: \"theme\",\n                value: selectedValue,\n                onChange: handleChange,\n                children: _jsxs(VStack, {\n                  space: 3,\n                  children: [_jsx(Radio, {\n                    value: \"light\",\n                    children: \"Claro\"\n                  }), _jsx(Radio, {\n                    value: \"dark\",\n                    children: \"Oscuro\"\n                  })]\n                })\n              })\n            })]\n          })\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Regresar\"\n        })\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#007AFF',\n    marginHorizontal: 20,\n    marginTop: 20,\n    height: 50,\n    borderRadius: 5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 16\n  }\n});\nexport default ThemeSettingsScreen;","map":{"version":3,"names":["React","useState","StyleSheet","TouchableOpacity","NativeBaseProvider","Center","Box","FormControl","Stack","Text","Button","HStack","Radio","VStack","jsx","_jsx","jsxs","_jsxs","ThemeSettingsScreen","_ref","navigation","_useState","_useState2","_slicedToArray","selectedValue","setSelectedValue","handleChange","value","children","flex","maxWidth","mx","space","alignItems","fontSize","Group","name","onChange","style","styles","button","onPress","goBack","buttonText","create","backgroundColor","marginHorizontal","marginTop","height","borderRadius","justifyContent","color","fontWeight"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/Tema.js"],"sourcesContent":["//Cambiar tema\r\nimport React, { useState, StyleSheet, TouchableOpacity  } from \"react\";\r\n\r\nimport {\r\n  NativeBaseProvider,\r\n  Center,\r\n  Box,\r\n  FormControl,\r\n  Stack,\r\n  Text,\r\n  Button,\r\n  HStack,\r\n  Radio,\r\n  VStack,\r\n} from \"native-base\";\r\n\r\nconst ThemeSettingsScreen = ({ navigation }) => {\r\n  const [selectedValue, setSelectedValue] = useState(\"light\");\r\n\r\n  const handleChange = (value) => {\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <NativeBaseProvider>\r\n      <Center flex={1}>\r\n        <Box maxWidth=\"90%\" mx=\"auto\">\r\n          <FormControl>\r\n            <Stack space={4} alignItems=\"center\">\r\n              <Text fontSize=\"xl\">Tema:</Text>\r\n              <VStack space={4} alignItems=\"flex-start\">\r\n                <Radio.Group\r\n                  name=\"theme\"\r\n                  value={selectedValue}\r\n                  onChange={handleChange}\r\n                >\r\n                  <VStack space={3}>\r\n                    <Radio value=\"light\">Claro</Radio>\r\n                    <Radio value=\"dark\">Oscuro</Radio>\r\n                  </VStack>\r\n                </Radio.Group>\r\n              </VStack>\r\n              \r\n            </Stack>\r\n          </FormControl>\r\n          </Box>\r\n        <TouchableOpacity style={styles.button} \r\n      onPress={() => navigation.goBack()}>\r\n        <Text style={styles.buttonText}>Regresar</Text>\r\n      </TouchableOpacity>\r\n      </Center>\r\n    </NativeBaseProvider>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\nbutton: {\r\n  backgroundColor: '#007AFF',\r\n  marginHorizontal: 20,\r\n  marginTop: 20,\r\n  height: 50,\r\n  borderRadius: 5,\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n},\r\nbuttonText: {\r\n  color: '#FFFFFF',\r\n  fontWeight: 'bold',\r\n  fontSize: 16,\r\n},\r\n});\r\nexport default ThemeSettingsScreen;"],"mappings":";AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,gBAAgB,QAAS,OAAO;AAEtE,SACEC,kBAAkB,EAClBC,MAAM,EACNC,GAAG,EACHC,WAAW,EACXC,KAAK,EACLC,IAAI,EACJC,MAAM,EACNC,MAAM,EACNC,KAAK,EACLC,MAAM,QACD,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErB,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EACvC,IAAAC,SAAA,GAA0CpB,QAAQ,CAAC,OAAO,CAAC;IAAAqB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EAEtC,IAAMI,YAAY,GAAG,SAAfA,YAAYA,CAAIC,KAAK,EAAK;IAC9BF,gBAAgB,CAACE,KAAK,CAAC;EACzB,CAAC;EAED,OACEZ,IAAA,CAACX,kBAAkB;IAAAwB,QAAA,EACjBX,KAAA,CAACZ,MAAM;MAACwB,IAAI,EAAE,CAAE;MAAAD,QAAA,GACdb,IAAA,CAACT,GAAG;QAACwB,QAAQ,EAAC,KAAK;QAACC,EAAE,EAAC,MAAM;QAAAH,QAAA,EAC3Bb,IAAA,CAACR,WAAW;UAAAqB,QAAA,EACVX,KAAA,CAACT,KAAK;YAACwB,KAAK,EAAE,CAAE;YAACC,UAAU,EAAC,QAAQ;YAAAL,QAAA,GAClCb,IAAA,CAACN,IAAI;cAACyB,QAAQ,EAAC,IAAI;cAAAN,QAAA,EAAC;YAAK,EAAO,EAChCb,IAAA,CAACF,MAAM;cAACmB,KAAK,EAAE,CAAE;cAACC,UAAU,EAAC,YAAY;cAAAL,QAAA,EACvCb,IAAA,CAACH,KAAK,CAACuB,KAAK;gBACVC,IAAI,EAAC,OAAO;gBACZT,KAAK,EAAEH,aAAc;gBACrBa,QAAQ,EAAEX,YAAa;gBAAAE,QAAA,EAEvBX,KAAA,CAACJ,MAAM;kBAACmB,KAAK,EAAE,CAAE;kBAAAJ,QAAA,GACfb,IAAA,CAACH,KAAK;oBAACe,KAAK,EAAC,OAAO;oBAAAC,QAAA,EAAC;kBAAK,EAAQ,EAClCb,IAAA,CAACH,KAAK;oBAACe,KAAK,EAAC,MAAM;oBAAAC,QAAA,EAAC;kBAAM,EAAQ;gBAAA;cAC3B;YACG,EACP;UAAA;QAEH;MACI,EACR,EACRb,IAAA,CAACZ,gBAAgB;QAACmC,KAAK,EAAEC,MAAM,CAACC,MAAO;QACzCC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMrB,UAAU,CAACsB,MAAM,EAAE;QAAA,CAAC;QAAAd,QAAA,EACjCb,IAAA,CAACN,IAAI;UAAC6B,KAAK,EAAEC,MAAM,CAACI,UAAW;UAAAf,QAAA,EAAC;QAAQ;MAAO,EAC9B;IAAA;EACV,EACU;AAEzB,CAAC;AAED,IAAMW,MAAM,GAAGrC,UAAU,CAAC0C,MAAM,CAAC;EACjCJ,MAAM,EAAE;IACNK,eAAe,EAAE,SAAS;IAC1BC,gBAAgB,EAAE,EAAE;IACpBC,SAAS,EAAE,EAAE;IACbC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,QAAQ;IACxBjB,UAAU,EAAE;EACd,CAAC;EACDU,UAAU,EAAE;IACVQ,KAAK,EAAE,SAAS;IAChBC,UAAU,EAAE,MAAM;IAClBlB,QAAQ,EAAE;EACZ;AACA,CAAC,CAAC;AACF,eAAehB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}