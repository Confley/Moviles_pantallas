{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NewPasswordScreen = function NewPasswordScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    password = _useState2[0],\n    setPassword = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    confirmPassword = _useState4[0],\n    setConfirmPassword = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    showPassword = _useState6[0],\n    setShowPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showConfirmPassword = _useState8[0],\n    setShowConfirmPassword = _useState8[1];\n  var handlePasswordVisibility = function handlePasswordVisibility() {\n    setShowPassword(!showPassword);\n  };\n  var handleConfirmPasswordVisibility = function handleConfirmPasswordVisibility() {\n    setShowConfirmPassword(!showConfirmPassword);\n  };\n  var handleConfirm = function handleConfirm() {\n    if (password !== confirmPassword) {\n      alert('Las contraseñas no coinciden');\n    } else {\n      alert('Contraseña actualizada!');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Nueva Contrase\\xF1a\"\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        secureTextEntry: !showPassword,\n        value: password,\n        onChangeText: setPassword\n      }), _jsx(TouchableOpacity, {\n        style: styles.visibilityBtn,\n        onPress: handlePasswordVisibility,\n        children: _jsx(Ionicons, {\n          name: showPassword ? 'eye-off' : 'eye',\n          size: 24,\n          color: \"gray\"\n        })\n      })]\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Confirmar Contrase\\xF1a\",\n        secureTextEntry: !showConfirmPassword,\n        value: confirmPassword,\n        onChangeText: setConfirmPassword\n      }), _jsx(TouchableOpacity, {\n        style: styles.visibilityBtn,\n        onPress: handleConfirmPasswordVisibility,\n        children: _jsx(Ionicons, {\n          name: showConfirmPassword ? 'eye-off' : 'eye',\n          size: 24,\n          color: \"gray\"\n        })\n      })]\n    }), _jsx(TouchableOpacity, {\n      style: styles.confirmBtn,\n      onPress: handleConfirm,\n      children: _jsx(Text, {\n        style: styles.confirmBtnText,\n        children: \"Confirmar\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    padding: 20,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginTop: 50,\n    marginBottom: 30\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 10\n  },\n  input: {\n    flex: 1,\n    height: 50,\n    borderWidth: 1,\n    borderRadius: 10,\n    paddingHorizontal: 15,\n    borderColor: '#ccc'\n  },\n  visibilityBtn: {\n    padding: 10\n  },\n  confirmBtn: {\n    backgroundColor: 'blue',\n    paddingHorizontal: 50,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 30\n  },\n  confirmBtnText: {\n    color: '#fff',\n    fontSize: 18\n  }\n});\nexport default NewPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","Ionicons","jsx","_jsx","jsxs","_jsxs","NewPasswordScreen","_useState","_useState2","_slicedToArray","password","setPassword","_useState3","_useState4","confirmPassword","setConfirmPassword","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","showConfirmPassword","setShowConfirmPassword","handlePasswordVisibility","handleConfirmPasswordVisibility","handleConfirm","alert","style","styles","container","children","title","inputContainer","input","placeholder","secureTextEntry","value","onChangeText","visibilityBtn","onPress","name","size","color","confirmBtn","confirmBtnText","create","flex","backgroundColor","padding","alignItems","fontSize","fontWeight","marginTop","marginBottom","flexDirection","marginVertical","height","borderWidth","borderRadius","paddingHorizontal","borderColor","paddingVertical"],"sources":["C:/Users/popst/Desktop/PracticasMoviles/DNavigator/src/screens/ChangePassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst NewPasswordScreen = () => {\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n\r\n  const handlePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  }\r\n\r\n  const handleConfirmPasswordVisibility = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  }\r\n\r\n  const handleConfirm = () => {\r\n    if (password !== confirmPassword) {\r\n      // Show error message\r\n      alert('Las contraseñas no coinciden');\r\n    } else {\r\n      // Submit new password\r\n      alert('Contraseña actualizada!');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Nueva Contraseña</Text>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Contraseña\"\r\n          secureTextEntry={!showPassword}\r\n          value={password}\r\n          onChangeText={setPassword}\r\n        />\r\n        <TouchableOpacity style={styles.visibilityBtn} onPress={handlePasswordVisibility}>\r\n          <Ionicons name={showPassword ? 'eye-off' : 'eye'} size={24} color=\"gray\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Confirmar Contraseña\"\r\n          secureTextEntry={!showConfirmPassword}\r\n          value={confirmPassword}\r\n          onChangeText={setConfirmPassword}\r\n        />\r\n        <TouchableOpacity style={styles.visibilityBtn} onPress={handleConfirmPasswordVisibility}>\r\n          <Ionicons name={showConfirmPassword ? 'eye-off' : 'eye'} size={24} color=\"gray\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n      <TouchableOpacity style={styles.confirmBtn} onPress={handleConfirm}>\r\n        <Text style={styles.confirmBtnText}>Confirmar</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    padding: 20,\r\n    alignItems: 'center'\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginTop: 50,\r\n    marginBottom: 30\r\n  },\r\n  inputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginVertical: 10\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 50,\r\n    borderWidth: 1,\r\n    borderRadius: 10,\r\n    paddingHorizontal: 15,\r\n    borderColor: '#ccc'\r\n  },\r\n  visibilityBtn: {\r\n    padding: 10\r\n  },\r\n  confirmBtn: {\r\n    backgroundColor: 'blue',\r\n    paddingHorizontal: 50,\r\n    paddingVertical: 10,\r\n    borderRadius: 10,\r\n    marginTop: 30\r\n  },\r\n  confirmBtnText: {\r\n    color: '#fff',\r\n    fontSize: 18\r\n  }\r\n});\r\n\r\nexport default NewPasswordScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}